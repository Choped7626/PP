choped@Talenel:~$ ocaml
OCaml version 5.1.0
Enter #help;; for help.

Findlib has been successfully loaded. Additional directives:
  #require "package";;      to load a package
  #list;;                   to list the available packages
  #camlp4o;;                to load camlp4 (standard syntax)
  #camlp4r;;                to load camlp4 (revised syntax)
  #predicates "p,q,...";;   to set these predicates
  Topfind.reset();;         to force that packages will be reloaded
  #thread;;                 to enable threads

# 
    let rec fact n =
        if n <= 0 then 1
        else n * fact (n-1);;      
val fact : int -> int = <fun>
# fact 5;;
- : int = 120
#     let fact n = 
        let i = ref 1 in
        let f = ref 1 in
        while !i < n do
            f := !f * !i;
            i := !i + 1
        done;
            !f;;              
val fact : int -> int = <fun>
# fact    let fact2 n = 
          let i = ref 1 in
          let f = ref 1 in
          while !i <= n do
              f := !f * !i;
              i := !i + 1
          done;
              !f;;            
Error: Syntax error
#     let fact2 n = 
        let i = ref 1 in
        let f = ref 1 in
        while !i <= n do
            f := !f * !i;
            i := !i + 1
        done;
            !f;;              
val fact2 : int -> int = <fun>
#     let fact2 n = 
        let i = ref 1 in
        let f = ref 1 in
        while !i <= n do
            f := !f * !i;
            i := !i + 1
        done;
            !f;;              
val fact2 : int -> int = <fun>
#     let rec fact n =
        if n <= 0 then 1
        else n * fact (n-1);;
    val fact : int -> int = <fun>
# 
  fact 3;;
- : int = 6
# fact2 3;;
- : int = 6
# fact 50;;
- : int = -3258495067890909184
# fact2 50;;
- : int = -3258495067890909184
# fact2 12;;
- : int = 479001600
# fact 12;;
- : int = 479001600
# fact 0;;
- : int = 1
# fact2 0;;
- : int = 1
#     let fact3 n = 
        let f = ref 1 in
        for i = 2 to n do
            f := !f * i
        done;
        !f;;
          val fact3 : int -> int = <fun>
# 
  fact3 12;;
- : int = 479001600
# ^Z
[1]+  Stopped                 ocaml
choped@Talenel:~$ ledit

[2]+  Stopped                 ledit
choped@Talenel:~$ ledit ocaml
OCaml version 5.1.0
Enter #help;; for help.

Findlib has been successfully loaded. Additional directives:
  #require "package";;      to load a package
  #list;;                   to list the available packages
  #camlp4o;;                to load camlp4 (standard syntax)
  #camlp4r;;                to load camlp4 (revised syntax)
  #predicates "p,q,...";;   to set these predicates
  Topfind.reset();;         to force that packages will be reloaded
  #thread;;                 to enable threads

# sexo
  sexo
  ;;exo
Error: Unbound value sexo
# let v = [|1;2;3|];;
val v : int array = [|1; 2; 3|]
# v;;
- : int array = [|1; 2; 3|]
# v.(1);;
- : int = 2
# v.(2) <- 2 * v.(2) + v.(1) ;;
- : unit = ()
# v;;
- : int array = [|1; 2; 8|]
# v.(2);;
- : int = 8
# List
  ;;
Error: Unbound constructor List
# List.;;
Error: Syntax error
# sex;;
Error: Unbound value sex
# Array.length;;
- : 'a array -> int = <fun>
# Array.get v 2;; 
- : int = 8
# Array.set v 0 100;;
- : unit = ()
# v;;
- : int array = [|100; 2; 8|]
# Array.init 1000 (fun i -> 2 * i);; 
- : int array =
[|0; 2; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 30; 32; 34; 36; 38;
  40; 42; 44; 46; 48; 50; 52; 54; 56; 58; 60; 62; 64; 66; 68; 70; 72; 74; 76;
  78; 80; 82; 84; 86; 88; 90; 92; 94; 96; 98; 100; 102; 104; 106; 108; 110;
  112; 114; 116; 118; 120; 122; 124; 126; 128; 130; 132; 134; 136; 138; 140;
  142; 144; 146; 148; 150; 152; 154; 156; 158; 160; 162; 164; 166; 168; 170;
  172; 174; 176; 178; 180; 182; 184; 186; 188; 190; 192; 194; 196; 198; 200;
  202; 204; 206; 208; 210; 212; 214; 216; 218; 220; 222; 224; 226; 228; 230;
  232; 234; 236; 238; 240; 242; 244; 246; 248; 250; 252; 254; 256; 258; 260;
  262; 264; 266; 268; 270; 272; 274; 276; 278; 280; 282; 284; 286; 288; 290;
  292; 294; 296; 298; 300; 302; 304; 306; 308; 310; 312; 314; 316; 318; 320;
  322; 324; 326; 328; 330; 332; 334; 336; 338; 340; 342; 344; 346; 348; 350;
  352; 354; 356; 358; 360; 362; 364; 366; 368; 370; 372; 374; 376; 378; 380;
  382; 384; 386; 388; 390; 392; 394; 396; 398; 400; 402; 404; 406; 408; 410;
  412; 414; 416; 418; 420; 422; 424; 426; 428; 430; 432; 434; 436; 438; 440;
  442; 444; 446; 448; 450; 452; 454; 456; 458; 460; 462; 464; 466; 468; 470;
  472; 474; 476; 478; 480; 482; 484; 486; 488; 490; 492; 494; 496; 498; 500;
  502; 504; 506; 508; 510; 512; 514; 516; 518; 520; 522; 524; 526; 528; 530;
  532; 534; 536; 538; 540; 542; 544; 546; 548; 550; 552; 554; 556; 558; 560;
  562; 564; 566; 568; 570; 572; 574; 576; 578; 580; 582; 584; 586; 588; 590;
  592; 594; 596; ...|]
# Array.make 1000 'a';;                 
- : char array =
[|'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a';
  'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; 'a'; ...|]
# let v = Array.make 20 (ref 0);;
val v : int ref array =
  [|{contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0}|]
# v.(0) := 7;;
- : unit = ()
# v;;
- : int ref array =
[|{contents = 7}; {contents = 7}; {contents = 7}; {contents = 7};
  {contents = 7}; {contents = 7}; {contents = 7}; {contents = 7};
  {contents = 7}; {contents = 7}; {contents = 7}; {contents = 7};
  {contents = 7}; {contents = 7}; {contents = 7}; {contents = 7};
  {contents = 7}; {contents = 7}; {contents = 7}; {contents = 7}|]
# let v = Array.init 20 (fun _ -> ref 0);;
val v : int ref array =
  [|{contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
    {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0}|]
# v.(0) := 7;;                            
- : unit = ()
# v;;                                     
- : int ref array =
[|{contents = 7}; {contents = 0}; {contents = 0}; {contents = 0};
  {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
  {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
  {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0};
  {contents = 0}; {contents = 0}; {contents = 0}; {contents = 0}|]
# 


